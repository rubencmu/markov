x=10
if(x>5){x<-0}
x
x<-1:10
ifelse(x>5,0,)
ifelse(x>5,0,"")
ifelse(x>5,0,x)
library('xlsx')
library(xlsx)
exit
close
install.packages("kernlab",dependencies=TRUE)
install.packages("ROCR",dependencies=TRUE)
install.packages("class",dependencies=TRUE)
install.packages("party",dependencies=TRUE)
install.packages("e1071",dependencies=TRUE)
install.packages("randomForest",dependencies=TRUE)
quit()\
exit
close
quit
install.packages("kernlab", dependencies=TRUE)#
install.packages("ROCR", dependencies=TRUE)#
install.packages("class", dependencies=TRUE)#
install.packages("party", dependencies=TRUE)#
install.packages("e1071", dependencies=TRUE)#
install.packages("randomForest", dependencies=TRUE)
install('shd')
install.packages('shd',dependencies=TRUE)
shd
shd()
install.packages('shd')
g1=randomDAG(10,prob=0.2)
library('pcalg')
library(pcalg)
install.packages('pcalg',dependencies=TRUE)
install.packages('graph')
source("https://bioconductor.org/biocLite.R")#
biocLite("graph")
g1=randomDAG(10,prob=0.2)
browseVignettes("graph")
library(graph)
g1=randomDAG(10,prob=0.2)
set.seed(123)
g1=randomEGraph(LETTERS[1:15],edges=100)
g1
nodes(g1)
degree(g1)
g2=randomEGraph(nodes=100,edges=50)
g2=randomEGraph(100,edges=50)
g1=randomEGraph(LETTERS[1:15],edges=100)
degree(g1)
adj(g1,"A")
library(igraph)
erdos.renyi.game(20,0.2,type=c('gnp'),directed=TRUE)
sample_gnp(20,0.2,directed=TRUE,loops=FALSE)
g1<-sample_gnp(20,0.2,directed=TRUE,loops=FALSE)
plot(g1)
rglplot(g1)
layout_randomly(g1,dim=3)
e=layout_randomly(g1,dim=3)
rglplot(g1)
rglplot(g1,layout=e)
print(g1)
e=layout_with_sugiyama(g1)
rglplot(g1,layout=e)
plot(g1,layout=e)
in_circle(g1)
e=layout_in_circle(g1)
plot(g1,layout=e)
el <- matrix( c("foo", "bar", "bar", "foobar"), nc = 2, byrow = TRUE)#
graph_from_edgelist(el)#
#
# Create a ring by hand#
graph_from_edgelist(cbind(1:10, c(2:10, 1)))
plot(el)
exit
quit()
getwd()
library('igraph')
g <- make_ring(10, dir=TRUE)#
al <- as_adj_list(g, mode="out")
al
install.packages()
install.packages('stringr')
install.packages('rJava')
source('https://bioconductor.org/biocLite/R')
source('http://bioconductor.org/biocLite/R')
source("https://bioconductor.org/biocLite.R')
source('http://bioconductor.org/biocLite.R')
biocLite('graph')
biocLite('RBGL')
biocLite('Rgraphviz')
library(devtools)
install.packages('devtools')
library(devtools)
install_github('bdk2ccd/r-casual')
install_github('bd2kccd/r-casual')
install_github('bd2kccd/r-causal')
data('charity')
fgs=fgs(df=charity,penaltydiscount=2,depth=-1,verbose=TRUE)
library(rcausal)
data('charity')
fgs=fgs(df=charity,penaltydiscount=2,depth=-1,verbose=TRUE)
library(rcausal)
install.packages('rJava')
install_github('bd2kccd/r-causal')
library(devtools)
install_github('bd2kccd/r-causal')
library(rcausal)
library(r-causal)
library(rcausal)
install.packages('stringr')
install.packages('rJava')
source('https://bioconductor.org/biocLite.R')
biocLite('graph')
biocLite('RBGL')
biocLite('Rgraphviz')
install.packages('devtools')
install_github('bd2kccd/r-causal')
library(devtools)
install_github('bd2kccd/r-causal')
library(rcausal)
install.package('rcausal')
install.packages('rcausal')
install_github("bd2kccd/r-causal")
install_github("bd2kccd/r-causal,force=TRUE")
install_github("bd2kccd/r-causal")
library(rcausal)
install.packages('rJava',type='source')
library(rcausal)
install.packages('rJava',type='mac.binary')
library('rJava')
.jinit()
install_packages('rJava')
install_packages('stingr')
install_packages('rJava')
library(rJava)
.jinit()
install.packages('rJava',type='source')
library(rJava)
.jinit()
install.packages('rJava',type='source')
library(rJava)
.jinit()
library(rcausal)
install.packages('rJava')
install.packages('rJava',type='source')
library(rJava)
install.packages('rJava',type='source')
remove.packages('rJava')
library(rJava)
.jinit()
library(rcausal)
Sys.getenv('JAVA_HOME')
install.packages('rJava',type='source')
library(rJava)
install.packages('rJava',type='source')
library(rJava)
.jinit()
library(rJava)
.jinit()
install.packages('stringr')
source('https://bioconductor.org/biocLite.R')
biocLite('graph')
biocLite('RBGL')
biocLite('Rgraphviz')
install.packages('devtools')
library(devtools)
install_github('bd2kccd/r-causal')
library(rcasual)
library(rcausal)
library(graph)
library(RBGL)
library(Rgraphviz)
library(rcausal)
data('charity')
fgs<-fgs(df=charity,penaltydiscount=2,depth=-1,verbose=TRUE)
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
library(graph)
library(RBGL)
library(graph)
library(rcausal)
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
data('charity')
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
charity
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
fgs$parameters
fgs=fgs(df=charity)
library(rJava)
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
library(rJava)
library(rcausal)
fgs
fgs=fgs(df=charity)
library(rcausal)
fgs
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
library(RBGL)
library(graph)
library(rJava)
library(rcausal)
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
data('charity')
fgs <- fgs(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
fgs <- fgs.discrete(df = charity, penaltydiscount = 2, depth = -1, ignoreLinearDependence = TRUE, #
heuristicSpeedup = TRUE, numOfThreads = 2, verbose = TRUE)
data('audiology')
gs.discrete <- fgs.discrete(df=audiology,structurePrior=1.0,samplePrior=1.0, #
depth = -1, heuristicSpeedup = TRUE, numOfThreads = 2,verbose = TRUE)
library(rJava)
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
gs.discrete <- fgs.discrete(df=audiology,structurePrior=1.0,samplePrior=1.0, #
depth = -1, heuristicSpeedup = TRUE, numOfThreads = 2,verbose = TRUE)
library(rJava)
gs.discrete <- fgs.discrete(df=audiology,structurePrior=1.0,samplePrior=1.0, #
depth = -1, heuristicSpeedup = TRUE, numOfThreads = 2,verbose = TRUE)
.jinit()
install.packages('rJava',type='source')
library(rJava)
library(rcausal)
gs.discrete <- fgs.discrete(df=audiology,structurePrior=1.0,samplePrior=1.0, #
depth = -1, heuristicSpeedup = TRUE, numOfThreads = 2,verbose = TRUE)
install.packages('rJava',type='source')
library(rcausal)
library(graph)
library(RGBL)
library(RBGL)
library(rJava)
library(rcausal)
library(rJava)
options(java.home="/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk")
Sys.setenv(DYLD_FALLBACK_LIBRARY_PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/server/")
library(rJava)
install.packages('rJava',type='source')
library(rJava)
library(rcausal)
library(graph)
library(RBGL)
library(rJava)
library(rcausal)
fgs.discrete <- fgs.discrete(df=audiology,structurePrior=1.0,samplePrior=1.0, #
depth = -1, heuristicSpeedup = TRUE, numOfThreads = 2,verbose = TRUE)
library(rcausal)
data=read.table('BOLDtrue_1.txt')
data
plot(data[,1])
plot(data[,1],style,'--')
plot(data[,1],type,'--')
plot(data[,1],type,'l')
plot(data[,1],type==l)
plot(data[,1],type='l')
plot(data[,45],type='l')
plot(data[,9],type='l')
plot(data,type='l')
plot(data[,],type='l')
plot(data[,1,2,3,4],type='l')
plot(data[,91],type='l')
plot(data[,47],type='l')
plot(data[,87],type='l')
plot(data[,87],type='l')
plot(data[,5],type='l')
data=read.table('BOLDtrue_1.txt')
plot(data[,5],type='l')
plot(data[,1],type='l')
